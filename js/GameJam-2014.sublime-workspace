{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var GJ = (function () {\n	var TARGET_FPS		= 60,\n		CANVAS_ID		= 'myCanvas',\n\n		NUM_PLAYERS 	= 1,\n		NUM_WORLDS		= 1,\n\n		currentWorld 	= 0,\n\n		i,\n		event,\n\n		stage,\n		worlds,\n		actors,\n		players;\n\n\n	return {\n		start: function () {\n			GJ.Input.init();\n			GJ.Assets.init();\n			GJ.Sound.init();\n\n			stage = new createjs.Stage(CANVAS_ID);\n\n			worlds = [];\n			i = NUM_WORLDS;\n			while (--i) {\n				worlds.push(new World());\n			}\n\n			actors = [];\n\n			players = [];\n			i = NUM_PLAYERS\n			while (--i) {\n				players.push(new Player(13));\n			}\n\n			createjs.Ticker.setFPS(TARGET_FPS);\n			createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED; // if we do standard timing instead of this can we adjust fps to slow/fast up game?\n			createjs.Ticker.addEventListener('tick', GJ.update);\n		},\n\n\n		update: function (evt) {\n			event = evt;\n\n			map.update();\n\n			i = players.length;\n			while (--i) {\n				players[i].update();\n			}\n\n			stage.update();\n		},\n\n\n		toDelta: function (val) {\n			return event.delta / 1000 * val;\n		},\n\n\n		pause: function () {\n			Ticker.setPaused(true);\n		},\n\n\n		resume: function () {\n			Ticker.setPaused(false);\n		},\n\n\n		getFPS: function () {\n			return Ticker.getMeasuredFPS();\n		},\n\n\n		getStage: function () {\n			return stage;\n		},\n\n\n		getCurrentWorld: function () {\n			return worlds[currentWorld];\n		}\n	};\n})();\n",
			"file": "GJ.js",
			"file_size": 1319,
			"file_write_time": 130349411870000000,
			"settings":
			{
				"buffer_size": 1318,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/adamburns/OwnCloud/Code/GameJam-2014/js/startup.js",
		"/Users/adamburns/OwnCloud/Code/GameJam-2014/js/Actor.js",
		"/Users/adamburns/OwnCloud/Notes/Tabs/I want you back.txt",
		"/Users/adamburns/OwnCloud/Notes/Tabs/I'll Follow You Into The Dark - Death Cab for Cutie.txt",
		"/Users/adamburns/OwnCloud/Notes/Tabs/Home - Michael Buble.txt",
		"/Users/adamburns/Downloads/mods.zip Folder/deckardcoat/recipes/armor/other/deckardcoat/deckardchest.recipe",
		"/Users/adamburns/OwnCloud/Tabs/Hendrix, Jimi - Hey Joe Lyrics",
		"/Users/adamburns/Downloads/mods.zip Folder/BioMat/BioMat.modinfo"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "GJ.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1318,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								224
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "GameJam-2014.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"gj",
				"js/GJ.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
